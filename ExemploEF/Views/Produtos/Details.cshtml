@model ExemploEF.Models.Produto

@{
    ViewData["Title"] = "Detalhes do Produto";
}

<style>
    /* Fundo azul gradiente */
    .page-background {
        background: linear-gradient(to right, #0066cc, #00b3ff); /* Gradiente azul */
        padding: 20px;
    }
</style>

<div class="page-background">
    <h1 class="text-center text-white">@ViewData["Title"]</h1>

    <div>
        <h4 class="text-white">Produto</h4>
        <hr />
        <dl class="row">
            <!-- Nome do Produto -->
            <dt class="col-sm-2 text-white">
                @Html.DisplayNameFor(model => model.Nome)
            </dt>
            <dd class="col-sm-10 text-white">
                @Html.DisplayFor(model => model.Nome)
            </dd>

            <!-- Estoque -->
            <dt class="col-sm-2 text-white">
                @Html.DisplayNameFor(model => model.Estoque)
            </dt>
            <dd class="col-sm-10 text-white">
                @Html.DisplayFor(model => model.Estoque)
            </dd>

            <!-- Categoria -->
            <dt class="col-sm-2 text-white">
                @Html.DisplayNameFor(model => model.CategoriaID)
            </dt>
            <dd class="col-sm-10 text-white">
                @Html.DisplayFor(model => model.Categoria.Nome)
            </dd>
        </dl>
    </div>

    <div class="text-center">
        <a asp-action="Edit" asp-route-id="@Model?.ProdutoId" class="btn btn-warning mx-2">Editar</a> |
        <a asp-action="Index" class="btn btn-secondary mx-2">Voltar para a lista</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
